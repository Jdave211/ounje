{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davejaga/Desktop/Projects/ounje/client/components/Loading.js\",\n  _this = this;\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LoadingScreen = function LoadingScreen() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    quoteIndex = _useState2[0],\n    setQuoteIndex = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var quotes = [\"Patience is a virtue...\", \"Amazing things are about to happen...\", \"Who let you cook?...\", \"Greatness is just around the corner...\", \"Good things come to those who wait...\", \"Cook better than a regis boy...\", \"Ramsey Gordon who??...\", \"An empty stomach is not a good political adviser...\", \"Tell me what you eat, and I will tell you what you are...\", \"One cannot think well, love well, sleep well, if one has not dined well...\", \"Ask not what you can do for your country. Ask what's for lunch...\", \"Food is our common ground, a universal experience...\", \"Cooking is like love. It should be entered into with abandon or not at all...\"];\n  useEffect(function () {\n    var quoteInterval = setInterval(function () {\n      setQuoteIndex(Math.floor(Math.random() * quotes.length));\n    }, 5000);\n    var progressInterval = setInterval(function () {\n      if (Math.random() > 0.95) {\n        setIsLoading(false);\n        clearInterval(progressInterval);\n      }\n    }, 500);\n    return function () {\n      clearInterval(quoteInterval);\n      clearInterval(progressInterval);\n    };\n  }, []);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"green\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.quote,\n      children: quotes[quoteIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  quote: {\n    marginTop: 20,\n    fontSize: 18,\n    color: 'white'\n  }\n});\nexport default LoadingScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ActivityIndicator","jsxDEV","_jsxDEV","LoadingScreen","_useState","_useState2","_slicedToArray","quoteIndex","setQuoteIndex","_useState3","_useState4","isLoading","setIsLoading","quotes","quoteInterval","setInterval","Math","floor","random","length","progressInterval","clearInterval","style","styles","container","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","quote","create","flex","justifyContent","alignItems","marginTop","fontSize"],"sources":["/Users/davejaga/Desktop/Projects/ounje/client/components/Loading.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, ActivityIndicator } from 'react-native';\n\nconst LoadingScreen = () => {\n  const [quoteIndex, setQuoteIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true); // For loading state\n  const quotes = [\n    \"Patience is a virtue...\",\n    \"Amazing things are about to happen...\",\n    \"Who let you cook?...\",\n    \"Greatness is just around the corner...\",\n    \"Good things come to those who wait...\",\n    \"Cook better than a regis boy...\",\n    \"Ramsey Gordon who??...\",\n    \"An empty stomach is not a good political adviser...\",\n    \"Tell me what you eat, and I will tell you what you are...\",\n    \"One cannot think well, love well, sleep well, if one has not dined well...\",\n    \"Ask not what you can do for your country. Ask what's for lunch...\",\n    \"Food is our common ground, a universal experience...\",\n    \"Cooking is like love. It should be entered into with abandon or not at all...\",\n    \n    // Add more quotes here\n  ];\n\n  useEffect(() => {\n    const quoteInterval = setInterval(() => {\n      setQuoteIndex(Math.floor(Math.random() * quotes.length));\n    }, 5000);\n\n    // Simulate loading progress\n    const progressInterval = setInterval(() => {\n      // Replace with your actual loading logic\n      if (Math.random() > 0.95) { // Simulating completion\n        setIsLoading(false);\n        clearInterval(progressInterval);\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(quoteInterval);\n      clearInterval(progressInterval);\n    };\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator size=\"large\" color=\"green\" /> \n      <Text style={styles.quote}>\n        {quotes[quoteIndex]}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  quote: {\n    marginTop: 20,\n    fontSize: 18,\n    color: 'white',\n  }\n});\n\nexport default LoadingScreen;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,IAAAC,SAAA,GAAoCT,QAAQ,CAAC,CAAC,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAAkCd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAMG,MAAM,GAAG,CACb,yBAAyB,EACzB,uCAAuC,EACvC,sBAAsB,EACtB,wCAAwC,EACxC,uCAAuC,EACvC,iCAAiC,EACjC,wBAAwB,EACxB,qDAAqD,EACrD,2DAA2D,EAC3D,4EAA4E,EAC5E,mEAAmE,EACnE,sDAAsD,EACtD,+EAA+E,CAGhF;EAEDjB,SAAS,CAAC,YAAM;IACd,IAAMkB,aAAa,GAAGC,WAAW,CAAC,YAAM;MACtCP,aAAa,CAACQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,MAAM,CAACM,MAAM,CAAC,CAAC;IAC1D,CAAC,EAAE,IAAI,CAAC;IAGR,IAAMC,gBAAgB,GAAGL,WAAW,CAAC,YAAM;MAEzC,IAAIC,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,EAAE;QACxBN,YAAY,CAAC,KAAK,CAAC;QACnBS,aAAa,CAACD,gBAAgB,CAAC;MACjC;IACF,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,YAAM;MACXC,aAAa,CAACP,aAAa,CAAC;MAC5BO,aAAa,CAACD,gBAAgB,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OACElB,OAAA,CAACL,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BvB,OAAA,CAACF,iBAAiB;MAAC0B,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAE,CAAC,EAChD9B,OAAA,CAACJ,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACU,KAAM;MAAAR,QAAA,EACvBZ,MAAM,CAACN,UAAU;IAAC;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACf,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACH,CAAC;AAEX,CAAC;AAED,IAAMT,MAAM,GAAGxB,UAAU,CAACmC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDJ,KAAK,EAAE;IACLK,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZZ,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAexB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}