{"ast":null,"code":"var _jsxFileName = \"/Users/davejaga/Desktop/Projects/ounje/client/components/ImageUploadForm.js\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport Constants from 'expo-constants';\nimport { ActionSheetIOS } from \"react-native-web/dist/index\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImagePickerExample() {\n  const [images, setImages] = useState([]);\n  const [imageUris, setImageUris] = useState([]);\n  const {\n    openAIKey\n  } = Constants.manifest2.extra;\n  const pickImage = async () => {\n    if (images.length >= 4) {\n      return;\n    }\n    const {\n      status: cameraRollPerm\n    } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (cameraRollPerm !== 'granted') {\n      alert('Sorry, we need camera roll permissions to make this work! Please go to Settings > Oúnje and enable the permission.');\n      Linking.openSettings();\n      return;\n    }\n    const {\n      status: cameraPerm\n    } = await ImagePicker.requestCameraPermissionsAsync();\n    if (cameraPerm !== 'granted') {\n      alert('Sorry, we need camera permissions to make this work! Please go to Settings > Oúnje and enable the permission.');\n      Linking.openSettings();\n      return;\n    }\n    ActionSheetIOS.showActionSheetWithOptions({\n      options: ['Cancel', 'Take Photo', 'Choose from Library'],\n      cancelButtonIndex: 0\n    }, async buttonIndex => {\n      if (buttonIndex === 1) {\n        let result = await ImagePicker.launchCameraAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 1\n        });\n        if (!result.cancelled) {\n          setImages([...images, result.assets[0].uri]);\n        }\n      } else if (buttonIndex === 2) {\n        let result = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 1\n        });\n        if (!result.cancelled) {\n          setImages([...images, result.assets[0].uri]);\n        }\n      }\n    });\n  };\n  const removeImage = index => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n  };\n  async function convertImageToBase64(uri) {\n    try {\n      const base64 = await FileSystem.readAsStringAsync(uri, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n      return base64;\n    } catch (error) {\n      console.error('Error converting to base64:', error);\n    }\n  }\n  const sendImages = async () => {\n    const base64Images = await Promise.all(images.map(convertImageToBase64));\n    const imageUrls = base64Images.map(img => `data:image/jpeg;base64,${img}`);\n    const payload = {\n      model: \"gpt-4-vision-preview\",\n      messages: [{\n        role: \"user\",\n        content: [{\n          type: \"text\",\n          text: \"What’s in this image?\"\n        }, ...imageUrls.map(url => ({\n          type: \"image_url\",\n          image_url: {\n            url\n          }\n        }))]\n      }],\n      max_tokens: 300\n    };\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${openAIKey}`\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('OpenAI Response:', data);\n      } else {\n        console.error('OpenAI API Error:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Network Error:', error);\n    }\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.imageContainer,\n      children: [images.map((image, index) => _jsxDEV(View, {\n        style: styles.imageBox,\n        children: [_jsxDEV(TouchableOpacity, {\n          style: styles.removeButton,\n          onPress: () => removeImage(index),\n          children: _jsxDEV(Text, {\n            style: styles.removeButtonText,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), _jsxDEV(Image, {\n          source: {\n            uri: image\n          },\n          style: styles.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)), images.length < 4 && _jsxDEV(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: pickImage,\n        children: _jsxDEV(Text, {\n          style: styles.addButtonText,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: _jsxDEV(TouchableOpacity, {\n        style: styles.buttonContainer,\n        onPress: sendImages,\n        disabled: images.length === 0,\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 50\n  },\n  imageContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 20\n  },\n  imageBox: {\n    width: 70,\n    height: 70,\n    margin: 5,\n    position: 'relative'\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  addButton: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5\n  },\n  addButtonText: {\n    fontSize: 20,\n    color: '#888'\n  },\n  removeButton: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    backgroundColor: 'red',\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1\n  },\n  removeButtonText: {\n    color: 'white',\n    fontSize: 15\n  },\n  buttonContainer: {\n    width: 200,\n    height: 50,\n    backgroundColor: 'green',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","Button","Image","View","StyleSheet","TouchableOpacity","Text","ImagePicker","FileSystem","Constants","ActionSheetIOS","Linking","jsxDEV","_jsxDEV","ImagePickerExample","images","setImages","imageUris","setImageUris","openAIKey","manifest2","extra","pickImage","length","status","cameraRollPerm","requestMediaLibraryPermissionsAsync","alert","openSettings","cameraPerm","requestCameraPermissionsAsync","showActionSheetWithOptions","options","cancelButtonIndex","buttonIndex","result","launchCameraAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","cancelled","assets","uri","launchImageLibraryAsync","removeImage","index","newImages","splice","convertImageToBase64","base64","readAsStringAsync","encoding","EncodingType","Base64","error","console","sendImages","base64Images","Promise","all","map","imageUrls","img","payload","model","messages","role","content","type","text","url","image_url","max_tokens","response","fetch","method","headers","body","JSON","stringify","ok","data","json","log","statusText","style","styles","container","children","imageContainer","image","imageBox","removeButton","onPress","removeButtonText","fileName","_jsxFileName","lineNumber","columnNumber","source","addButton","addButtonText","buttonContainer","disabled","buttonText","create","flex","alignItems","justifyContent","marginBottom","flexDirection","flexWrap","width","height","margin","position","backgroundColor","fontSize","color","right","top","borderRadius","zIndex","fontWeight"],"sources":["/Users/davejaga/Desktop/Projects/ounje/client/components/ImageUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Image, View, StyleSheet, TouchableOpacity, Text } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport Constants from 'expo-constants';\nimport { ActionSheetIOS } from 'react-native';\nimport { Linking } from 'react-native';\n\nexport default function ImagePickerExample() {\n  const [images, setImages] = useState([]);\n  const [imageUris, setImageUris] = useState([]);\n  const { openAIKey } = Constants.manifest2.extra;\n\n\n  const pickImage = async () => {\n    if (images.length >= 4) {\n      return;\n    }\n\n    const { status: cameraRollPerm } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n    if (cameraRollPerm !== 'granted') {\n      alert('Sorry, we need camera roll permissions to make this work! Please go to Settings > Oúnje and enable the permission.');\n      Linking.openSettings();\n      return;\n    }\n  \n    const { status: cameraPerm } = await ImagePicker.requestCameraPermissionsAsync();\n  \n    if (cameraPerm !== 'granted') {\n      alert('Sorry, we need camera permissions to make this work! Please go to Settings > Oúnje and enable the permission.');\n      Linking.openSettings();\n      return;\n    }\n  \n    ActionSheetIOS.showActionSheetWithOptions(\n      {\n        options: ['Cancel', 'Take Photo', 'Choose from Library'],\n        cancelButtonIndex: 0,\n      },\n      async (buttonIndex) => {\n        if (buttonIndex === 1) {\n          let result = await ImagePicker.launchCameraAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n          });\n  \n          if (!result.cancelled) {\n            setImages([...images, result.assets[0].uri]);\n          }\n        } else if (buttonIndex === 2) {\n          let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n          });\n  \n          if (!result.cancelled) {\n            setImages([...images, result.assets[0].uri]);\n          }\n        }\n      }\n    );\n  };\n\n  const removeImage = (index) => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n  };\n\n  async function convertImageToBase64(uri) {\n    try {\n      const base64 = await FileSystem.readAsStringAsync(uri, { encoding: FileSystem.EncodingType.Base64 });\n      return base64; // Prefix with 'data:image/jpeg;base64,' if needed\n    } catch (error) {\n      console.error('Error converting to base64:', error);\n    }\n  }\n\n\n  const sendImages = async () => {\n    const base64Images = await Promise.all(images.map(convertImageToBase64));\n    const imageUrls = base64Images.map(img => `data:image/jpeg;base64,${img}`); // Create data URIs\n  \n    const payload = {\n      model: \"gpt-4-vision-preview\", \n      messages: [\n        {\n          role: \"user\",\n          content: [\n            { type: \"text\", text: \"What’s in this image?\" }, // Your prompt\n            ...imageUrls.map(url => ({ type: \"image_url\", image_url: { url } })) // Image URLs\n          ]\n        }\n      ],\n      max_tokens: 300 // Adjust as needed\n    };\n  \n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${openAIKey}`,\n        },\n        body: JSON.stringify(payload),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        console.log('OpenAI Response:', data); \n        // Process the response from OpenAI here (e.g., display the generated text)\n      } else {\n        console.error('OpenAI API Error:', response.status, response.statusText);\n        // Handle errors, e.g., show an error message to the user\n      }\n    } catch (error) {\n      console.error('Network Error:', error);\n      // Handle network errors\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.imageContainer}>\n        {images.map((image, index) => (\n          <View key={index} style={styles.imageBox}>\n            <TouchableOpacity style={styles.removeButton} onPress={() => removeImage(index)}>\n              <Text style={styles.removeButtonText}>-</Text>\n            </TouchableOpacity>\n            <Image source={{ uri: image }} style={styles.image} />\n          </View>\n        ))}\n        {images.length < 4 && (\n          <TouchableOpacity style={styles.addButton} onPress={pickImage}>\n            <Text style={styles.addButtonText}>+</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n      <View style={styles.buttonContainer}>\n      <TouchableOpacity \n        style={styles.buttonContainer} \n        onPress={sendImages} \n        disabled={images.length === 0}\n      >\n        <Text style={styles.buttonText}>Generate</Text>\n      </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 50,\n  },\n  imageContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 20,\n    \n  },\n  imageBox: {\n    width: 70,\n    height: 70,\n    margin: 5,\n    position: 'relative',\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n  addButton: {\n    width: 50,\n    height: 50,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n  },\n  addButtonText: {\n    fontSize: 20,\n    color: '#888',\n  },\n  removeButton: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    backgroundColor: 'red',\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n  },\n  removeButtonText: {\n    color: 'white',\n    fontSize: 15,\n  },\n  buttonContainer: {\n    width: 200,\n    height: 50,\n    backgroundColor: 'green',\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}